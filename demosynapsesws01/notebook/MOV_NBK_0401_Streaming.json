{
	"name": "MOV_NBK_0401_Streaming",
	"properties": {
		"folder": {
			"name": "Movies"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Movies",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 4,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "4",
				"spark.dynamicAllocation.maxExecutors": "4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/f6c0b928-7078-4332-a106-e7a9c5253249/resourceGroups/demo-synapse-rg/providers/Microsoft.Synapse/workspaces/demosynapsesws01/bigDataPools/Movies",
				"name": "Movies",
				"type": "Spark",
				"endpoint": "https://demosynapsesws01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Movies",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Import libraries"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.types import StringType, TimestampType, DateType, IntegerType, StructType\r\n",
					"from pyspark.sql.functions import col, lit, udf\r\n",
					"\r\n",
					"import uuid"
				],
				"execution_count": 35
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Create functions"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"uuidUDF = udf(lambda : str(uuid.uuid4()),StringType())"
				],
				"execution_count": 36
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Import data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"# Define schema\r\n",
					"schema = (StructType().\r\n",
					"          add(\"TransactionID\", StringType()).\r\n",
					"          add(\"CustomerID\", StringType()).\r\n",
					"          add(\"MovieID\", StringType()).\r\n",
					"          add(\"StreamStart\",  TimestampType()).\r\n",
					"          add(\"StreamEnd\", TimestampType()).\r\n",
					"          add(\"CreatedDate\", DateType()).\r\n",
					"          add(\"UpdatedDate\", DateType())\r\n",
					"         )\r\n",
					"\r\n",
					"# Read data from lake\r\n",
					"df_Southridge = spark.read.load('abfss://movies@demosynapsedls01.dfs.core.windows.net/raw/Southridge/CloudStreaming/dbo.Transactions.parquet',\r\n",
					"                        format='parquet',\r\n",
					"                        schema=schema,\r\n",
					"                        header=True, \r\n",
					"                        ignoreLeadingWhiteSpace=True, \r\n",
					"                        ignoreTrailingWhiteSpace=True\r\n",
					"                        )\r\n",
					"\r\n",
					"# Display dataframe\r\n",
					"#df_Southridge.printSchema\r\n",
					"#display(df_Southridge.limit(100))"
				],
				"execution_count": 37
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Transform data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Rename columns\r\n",
					"df_SouthridgeModified = df_Southridge.withColumnRenamed(\"TransactionID\", \"SourceSystemTransactionID\")\r\n",
					"\r\n",
					"# Add columns\r\n",
					"df_SouthridgeModified = (\r\n",
					"    df_SouthridgeModified.withColumn(\"SourceSystemID\", lit(\"1\").cast(IntegerType()))\r\n",
					"                         .withColumn(\"GlobalTransactionID\", uuidUDF())\r\n",
					")\r\n",
					"\r\n",
					"# Reorder colums\r\n",
					"df_SouthridgeModified = df_SouthridgeModified.select(\r\n",
					"    'SourceSystemID',\r\n",
					"    'GlobalTransactionID',\r\n",
					"    'SourceSystemTransactionID',\r\n",
					"    'CustomerID',\r\n",
					"    'MovieID',\r\n",
					"    'StreamStart',\r\n",
					"    'StreamEnd',\r\n",
					"    'CreatedDate',\r\n",
					"    'UpdatedDate'\r\n",
					")\r\n",
					"\r\n",
					"# Display dataframe\r\n",
					"#df_SouthridgeModified.printSchema\r\n",
					"#display(df_SouthridgeModified.limit(100))"
				],
				"execution_count": 38
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Writing transformed data to lake "
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df_SouthridgeModified.write.format('parquet').mode('overwrite').save('abfss://movies@demosynapsedls01.dfs.core.windows.net/curated/streaming.parquet')"
				],
				"execution_count": 40
			}
		]
	}
}