{
	"name": "MOV_NBK_0404_Sales",
	"properties": {
		"folder": {
			"name": "Movies"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "Movies",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/f6c0b928-7078-4332-a106-e7a9c5253249/resourceGroups/demo-synapse-rg/providers/Microsoft.Synapse/workspaces/demosynapsesws01/bigDataPools/Movies",
				"name": "Movies",
				"type": "Spark",
				"endpoint": "https://demosynapsesws01.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/Movies",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "2.4",
				"nodeCount": 10,
				"cores": 8,
				"memory": 56,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Import libraries"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql.types import StringType, TimestampType, DateType, IntegerType, DecimalType, BooleanType, StructType\r\n",
					"from pyspark.sql.functions import col, lit, udf, greatest\r\n",
					"import uuid"
				],
				"execution_count": 52
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Define functions"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"uuidUDF = udf(lambda : str(uuid.uuid4()),StringType())"
				],
				"execution_count": 53
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Import data Southridge"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Read data from lake\r\n",
					"df_Southridge_Orders = spark.read.load('abfss://movies@demosynapsedls01.dfs.core.windows.net/raw/Southridge/CloudSales/dbo.Orders.parquet',\r\n",
					"                        format='parquet',\r\n",
					"                        inferSchema=True,\r\n",
					"                        header=True, \r\n",
					"                        ignoreLeadingWhiteSpace=True, \r\n",
					"                        ignoreTrailingWhiteSpace=True\r\n",
					"                        )\r\n",
					"\r\n",
					"# Display dataframe\r\n",
					"#df_Southridge_Orders.printSchema()\r\n",
					"#display(df_Southridge_Orders.limit(100))"
				],
				"execution_count": 54
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Read data from lake\r\n",
					"df_Southridge_OrderDetails = spark.read.load('abfss://movies@demosynapsedls01.dfs.core.windows.net/raw/Southridge/CloudSales/dbo.OrderDetails.parquet',\r\n",
					"                        format='parquet',\r\n",
					"                        inferSchema=True,\r\n",
					"                        header=True, \r\n",
					"                        ignoreLeadingWhiteSpace=True, \r\n",
					"                        ignoreTrailingWhiteSpace=True\r\n",
					"                        )\r\n",
					"\r\n",
					"# Display dataframe\r\n",
					"#df_Southridge_OrderDetails.printSchema()\r\n",
					"#display(df_Southridge_OrderDetails.limit(100))"
				],
				"execution_count": 56
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Rename duplicate columns Southridge"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# Rename columns\r\n",
					"df_Southridge_Orders_Renamed = (\r\n",
					"    df_Southridge_Orders.withColumnRenamed(\"CreatedDate\", \"OrderCreatedDate\")\r\n",
					"                        .withColumnRenamed(\"UpdatedDate\", \"OrderUpdatedDate\")\r\n",
					")"
				],
				"execution_count": 55
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"# Rename columns\r\n",
					"df_Southridge_OrderDetails_Renamed = (\r\n",
					"    df_Southridge_OrderDetails.withColumnRenamed(\"CreatedDate\", \"OrderDetailCreatedDate\")\r\n",
					"                        .withColumnRenamed(\"UpdatedDate\", \"OrderDetailUpdatedDate\")\r\n",
					")"
				],
				"execution_count": 57
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Join data Southridge"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Join dataframes\r\n",
					"df_Southridge_Orders_Joined = (\r\n",
					"    df_Southridge_Orders_Renamed.alias('Orders').join(\r\n",
					"        df_Southridge_OrderDetails_Renamed.alias('OrderDetails'),\r\n",
					"        df_Southridge_Orders_Renamed.OrderID == df_Southridge_OrderDetails_Renamed.OrderID,\r\n",
					"        'inner'\r\n",
					"    )\r\n",
					")\r\n",
					"\r\n",
					"# Display dataframe\r\n",
					"#df_Southridge_Orders_Joined.printSchema()\r\n",
					"#display(df_Southridge_Orders_Joined.limit(100))"
				],
				"execution_count": 58
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Transform data"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Add columns\r\n",
					"df_Southridge_Orders_Modified = (\r\n",
					"    df_Southridge_Orders_Joined.withColumn(\"SourceSystemID\", lit(\"1\").cast(IntegerType()))\r\n",
					")\r\n",
					"\r\n",
					"# Reorder colums\r\n",
					"df_Southridge_Orders_Modified = df_Southridge_Orders_Modified.select(\r\n",
					"    'SourceSystemID',\r\n",
					"    'Orders.OrderId',\r\n",
					"    'Orders.CustomerID',\r\n",
					"    'OrderDate',\r\n",
					"    'ShipDate',\r\n",
					"    'TotalCost',\r\n",
					"    'OrderCreatedDate',\r\n",
					"    'OrderUpdatedDate',\r\n",
					"    'OrderDetailID',\r\n",
					"    'MovieID',\r\n",
					"    'Quantity',\r\n",
					"    'UnitCost',\r\n",
					"    'LineNumber',\r\n",
					"    'OrderDetailCreatedDate',\r\n",
					"    'OrderDetailUpdatedDate'\r\n",
					")\r\n",
					"\r\n",
					"# Rename columns\r\n",
					"df_Southridge_Orders_Modified = (\r\n",
					"    df_Southridge_Orders_Modified.withColumnRenamed(\"OrderId\", \"SourceSystemOrderID\")\r\n",
					")\r\n",
					"\r\n",
					"# Display dataframe\r\n",
					"#df_Southridge_Orders_Modified.printSchema()\r\n",
					"#display(df_Southridge_Orders_Modified.limit(100))"
				],
				"execution_count": 59
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Combine all dataframes"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"df_unioned = df_Southridge_Orders_Modified\r\n",
					"\r\n",
					"# Display dataframe\r\n",
					"#df_unioned.printSchema()\r\n",
					"#display(df_unioned.limit(100))"
				],
				"execution_count": 60
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Add new ID"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"# Add columns\r\n",
					"df_unioned_withID = df_unioned.withColumn(\"GlobalOrderID\", uuidUDF())\r\n",
					"\r\n",
					"# Order columns\r\n",
					"df_unioned_withID = df_unioned_withID.select(\r\n",
					"    'SourceSystemID',\r\n",
					"    'GlobalOrderID',\r\n",
					"    'SourceSystemOrderID',\r\n",
					"    'CustomerID',\r\n",
					"    'OrderDate',\r\n",
					"    'ShipDate',\r\n",
					"    'TotalCost',\r\n",
					"    'OrderCreatedDate',\r\n",
					"    'OrderUpdatedDate',\r\n",
					"    'OrderDetailID',\r\n",
					"    'MovieID',\r\n",
					"    'Quantity',\r\n",
					"    'UnitCost',\r\n",
					"    'LineNumber',\r\n",
					"    'OrderDetailCreatedDate',\r\n",
					"    'OrderDetailUpdatedDate'\r\n",
					")\r\n",
					"\r\n",
					"# Display dataframe\r\n",
					"#df_unioned_withID.printSchema()\r\n",
					"#display(df_unioned_withID.limit(100))"
				],
				"execution_count": 61
			},
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"## Writing transformed data to lake "
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df_unioned_withID.write.format('parquet').mode('overwrite').save('abfss://movies@demosynapsedls01.dfs.core.windows.net/curated/sales.parquet')"
				],
				"execution_count": 62
			}
		]
	}
}