{
	"name": "MOV_SQL_0564_LoadTables_DimMovies",
	"properties": {
		"description": "OpenHack MDWH\nAzure Synapse Analytics Demo\nhttps://github.com/aessing/demo-azuresynapse\n\nDeveloper: Andre Essing\n(https://www.andre-essing.de/)\n(https://github.com/aessing)\n(https://twitter.com/aessing)\n(https://www.linkedin.com/in/aessing/)\n\nTHIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\nEITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.",
		"folder": {
			"name": "Movies"
		},
		"content": {
			"query": "-- =============================================================================\n-- OpenHack MDWH\n-- Azure Synapse Analytics Demo\n-- https://github.com/aessing/demo-azuresynapse\n-- -----------------------------------------------------------------------------\n-- Developer.......: Andre Essing (https://www.andre-essing.de/)\n--                                (https://github.com/aessing)\n--                                (https://twitter.com/aessing)\n--                                (https://www.linkedin.com/in/aessing/)\n-- -----------------------------------------------------------------------------\n-- THIS CODE AND INFORMATION ARE PROVIDED \"AS IS\" WITHOUT WARRANTY OF ANY KIND,\n-- EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED\n-- WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.\n-- =============================================================================\n\n-- Check out the distinct values\n-- SELECT DISTINCT [Title] FROM [ext].[Catalog]\n\n-- Load table\nDECLARE @MaxSK TINYINT;\nSELECT @MaxSK = ISNULL(MAX(MovieCategorySK), 0) FROM [dbo].[DimCategories]\n\n/*#INSERT INTO [dbo].[DimCategories] (\n\tMovieCategorySK,\n\tMovieCategoryDescription\n)*/\nSELECT * FROM (\n\tSELECT \n\t\t@MaxSK + ROW_NUMBER() OVER (ORDER BY ExternalTable.Genre) AS MovieCategorySK,\n\t\tExternalTable.Genre AS MovieCategoryDescription\n\tFROM (\n\t\tSELECT\n\t\t\tDISTINCT [Genre]\n\t\tFROM\n\t\t\t[ext].[Catalog]\n\t) ExternalTable\n) CleansedTable\nWHERE CleansedTable.MovieCategoryDescription NOT IN (SELECT MovieCategoryDescription FROM [dbo].[DimCategories])\n\n-- Check Load\n-- SELECT * FROM [dbo].[DimCategories]\n\n\n\nCREATE TABLE [dbo].[DimMovies] (\n    [MovieSK]         INT              NOT NULL,\n    [MovieID]         UNIQUEIDENTIFIER NOT NULL,\n    [MovieTitle]      VARCHAR (100)    NOT NULL,\n    [MovieCategorySK] TINYINT          NOT NULL,\n    [MovieRatingSK]   TINYINT          NOT NULL,\n    [MovieRunTimeMin] SMALLINT         NOT NULL\n)\nWITH (HEAP, DISTRIBUTION = REPLICATE);\n\n\nSELECT \n\tGlobalMovieID,\n\tTitle,\n\tgen.MovieCategorySK,\n\tRATING,\n\trat.MovieRatingSK,\n\tRuntimeMinutes\nFROM\n\t[ext].[Catalog] cat\nLEFT JOIN\n\t[dbo].[DimCategories] gen\n\tON (cat.Genre = gen.MovieCategoryDescription)\nLEFT JOIN\n\t[dbo].[DimRatings] rat\n\tON CASE\n\t\tWHEN cat.Rating = 'PG=13' AND ('PG-13' = rat.MovieRatingDescription) THEN 1\n\t\tELSE 0\n\t\tEND = 1\nOrder BY Title\n\n\nCREATE EXTERNAL TABLE [ext].[Catalog] (\n\t[SourceSystemID] int,\n\t[GlobalMovieID] varchar(8000),\n\t[SourceSystemMovieID] varchar(8000),\n\t[SouthridgeMovieID] varchar(8000),\n\t[Title] varchar(8000),\n\t[Genre] varchar(8000),\n\t[Rating] varchar(8000),\n\t[RuntimeMinutes] int,\n\t[TheatricalReleaseYear] int,\n\t[PhysicalAvailabilityDate] date,\n\t[StreamingAvailabilityDate] date",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"poolName": "Movies",
				"databaseName": "Movies"
			}
		},
		"type": "SqlQuery"
	}
}